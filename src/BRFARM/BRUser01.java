/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package BRFARM;

import java.awt.Toolkit;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wattana
 */
public class BRUser01 extends javax.swing.JFrame {

    public static String vUSE_USER, vUSE_NAME, vUSE_APPR, vUSE_AUTH;
    public static String OnCreate, OnChange;
    public static String FrameOpen = "Yes";
    public static String JPanel = "Farm";
    DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
    DefaultTableModel mUser, mDriver;
    ClassReturnData crd = new ClassReturnData();
    ClassInsertData cid = new ClassInsertData();
    ClassListData cld = new ClassListData();

    /**
     * Launch the application.
     */
    public BRUser01() {
        initComponents();
        this.setTitle("FAR_USER : " + BRLogin.vDuckBreed + " " + BRLogin.vDuckBreedDesc + " : " + BRLogin.vFarm + " " + BRLogin.vFarmDesc);
        mUser = (DefaultTableModel) jTableUser.getModel();
        mDriver = (DefaultTableModel) jTableDriver.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        jpUser = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUser = new javax.swing.JTable();
        jpDriver = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDriver = new javax.swing.JTable();
        jButtonClose = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuCreate = new javax.swing.JMenu();
        jMenuChange = new javax.swing.JMenu();
        jMenuDelete = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FAR_MFARM. LIST");
        setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jpUser.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpUserComponentShown(evt);
            }
        });

        jTableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Name", "Approve", "Authorize"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableUser);

        javax.swing.GroupLayout jpUserLayout = new javax.swing.GroupLayout(jpUser);
        jpUser.setLayout(jpUserLayout);
        jpUserLayout.setHorizontalGroup(
            jpUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1195, Short.MAX_VALUE)
        );
        jpUserLayout.setVerticalGroup(
            jpUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
        );

        jTabbedPane.addTab("User Management", jpUser);

        jpDriver.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpDriverComponentShown(evt);
            }
        });

        jTableDriver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableDriver);

        javax.swing.GroupLayout jpDriverLayout = new javax.swing.GroupLayout(jpDriver);
        jpDriver.setLayout(jpDriverLayout);
        jpDriverLayout.setHorizontalGroup(
            jpDriverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1195, Short.MAX_VALUE)
        );
        jpDriverLayout.setVerticalGroup(
            jpDriverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
        );

        jTabbedPane.addTab("Driver", jpDriver);

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jMenuCreate.setText("Create :");
        jMenuCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuCreateMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuCreate);

        jMenuChange.setText("Change :");
        jMenuChange.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuChangeMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuChange);

        jMenuDelete.setText("Delete :");
        jMenuDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuDeleteMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuDelete);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonClose)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonClose)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ResetModel() {

        if ("User".equals(JPanel)) {
            while (mUser.getRowCount() > 0) {
                for (int i = 0; i < mUser.getRowCount(); ++i) {
                    mUser.removeRow(i);
                }
            }
        } else {
            while (mDriver.getRowCount() > 0) {
                for (int i = 0; i < mDriver.getRowCount(); ++i) {
                    mDriver.removeRow(i);
                }
            }
        }
    }

    private void UserDetail() {

        List<String> getListUserDetail = cld.GetResultUserDetail(BRLogin.vFarm);
        ResetModel();

        for (int i = 0; i < getListUserDetail.size(); i++) {
            String[] CheckUserDetail = getListUserDetail.get(i).split(";");
            String USE_AUTH;
            if ("0".equals(CheckUserDetail[2].trim()) || "".equals(CheckUserDetail[2].trim())) {
                USE_AUTH = "No";
            } else {
                USE_AUTH = "Yes";
            }

            mUser.insertRow(mUser.getRowCount(), new Object[]{
                CheckUserDetail[0].trim(),
                CheckUserDetail[1].trim(),
                USE_AUTH,
                CheckUserDetail[3].trim()
            });
        }

    }

    private void DriverDetail() {

        List<String> getListUserDetail = cld.GetResultDriverDetail(BRLogin.vFarm);
        ResetModel();

        for (int i = 0; i < getListUserDetail.size(); i++) {
            String[] CheckUserDetail = getListUserDetail.get(i).split(";");

            mDriver.insertRow(mDriver.getRowCount(), new Object[]{
                CheckUserDetail[0].trim(),
                CheckUserDetail[1].trim()
            });
        }

    }

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jMenuCreateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuCreateMouseClicked
        // TODO add your handling code here:
        if ("User".equals(JPanel)) {
            new BRUser02().setVisible(true);
        } else {
            new BRUser03().setVisible(true);
        }
        OnCreate = "Yes";

    }//GEN-LAST:event_jMenuCreateMouseClicked

    private void jMenuChangeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuChangeMouseClicked
        // TODO add your handling code here:

        if ("User".equals(JPanel)) {

            int index = jTableUser.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(null, "Please select " + JPanel + " record for Change!");
            } else {
                vUSE_USER = String.valueOf(mUser.getValueAt(jTableUser.getSelectedRow(), 0));
                vUSE_NAME = String.valueOf(mUser.getValueAt(jTableUser.getSelectedRow(), 1));
                vUSE_APPR = String.valueOf(mUser.getValueAt(jTableUser.getSelectedRow(), 2));
                vUSE_AUTH = String.valueOf(mUser.getValueAt(jTableUser.getSelectedRow(), 3));
                new BRUser02().setVisible(true);
                OnChange = "Yes";
            }

        } else {
            int index = jTableDriver.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(null, "Please select " + JPanel + " record for Change!");
            } else {
                vUSE_USER = String.valueOf(mDriver.getValueAt(jTableDriver.getSelectedRow(), 0));
                vUSE_NAME = String.valueOf(mDriver.getValueAt(jTableDriver.getSelectedRow(), 1));
                new BRUser03().setVisible(true);
                OnChange = "Yes";
            }
        }


    }//GEN-LAST:event_jMenuChangeMouseClicked

    private void jMenuDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuDeleteMouseClicked
        // TODO add your handling code here:

        if ("User".equals(JPanel)) {

            int index = jTableUser.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(null, "Please select " + JPanel + " record for Delete!");
            } else {
                String USE_FARM = BRLogin.vFarm;
                String USE_USER = String.valueOf(mUser.getValueAt(jTableUser.getSelectedRow(), 0));
                Object[] options = {"Yes", "No"};
                int n = JOptionPane.showOptionDialog(null, "Do you want to Delete data?",
                        "Confirm to Delete?",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, options,
                        options[1]);
                if (n == 0) // Confirm Delete = Yes
                {
                    cid.DeleteUser(USE_FARM, USE_USER.toUpperCase()); // Delete Data
                    JOptionPane.showMessageDialog(null, "Delete Success");
                    UserDetail(); //Reload Table
                }
            }
        } else {
            int index = jTableDriver.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(null, "Please select " + JPanel + " record for Delete!");
            } else {
                String USE_FARM = BRLogin.vFarm;
                String USE_USER = String.valueOf(mDriver.getValueAt(jTableDriver.getSelectedRow(), 0));
                Object[] options = {"Yes", "No"};
                int n = JOptionPane.showOptionDialog(null, "Do you want to Delete data?",
                        "Confirm to Delete?",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, options,
                        options[1]);
                if (n == 0) // Confirm Delete = Yes
                {
                    cid.DeleteUser(USE_FARM, USE_USER.toUpperCase()); // Delete Data
                    JOptionPane.showMessageDialog(null, "Delete Success");
                    DriverDetail(); //Reload Table
                }
            }
        }


    }//GEN-LAST:event_jMenuDeleteMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        if (!"Yes".equals(FrameOpen)) {
            if ("User".equals(JPanel)) {
                UserDetail();
            } else {
                DriverDetail();
            }
            FrameOpen = "Yes";
        }
    }//GEN-LAST:event_formWindowActivated

    private void jpUserComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpUserComponentShown
        // TODO add your handling code here:
        JPanel = "User";
        UserDetail();
    }//GEN-LAST:event_jpUserComponentShown

    private void jpDriverComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpDriverComponentShown
        // TODO add your handling code here:
        JPanel = "Driver";
        DriverDetail();
    }//GEN-LAST:event_jpDriverComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BRUser01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BRUser01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BRUser01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BRUser01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BRUser01().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuChange;
    private javax.swing.JMenu jMenuCreate;
    private javax.swing.JMenu jMenuDelete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTable jTableDriver;
    private javax.swing.JTable jTableUser;
    private javax.swing.JPanel jpDriver;
    private javax.swing.JPanel jpUser;
    // End of variables declaration//GEN-END:variables
}
